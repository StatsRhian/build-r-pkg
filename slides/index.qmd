---
title: "Build your own toolbox 🧰"
subtitle: "R package development"
author: "[Dr Rhian Davies](mailto:statsrhian@gmail.com)"
date: 2025-09-03
date-format: "YYYY-MM-DD"
css: styles.css
format: revealjs
brand: ../_brand.yml
execute:
  echo: false
  eval: false
footer: "{{< fa brands github >}} {{< fa brands bluesky >}} {{< fa brands mastodon >}} {{< fa brands linkedin >}} [@statsRhian](https://bsky.app/profile/statsrhian.bsky.social) &nbsp; {{< fa laptop-code >}} [statsrhian.github.io/build-r-pkg](https://statsrhian.github.io/build-r-pkg)"

---

## Set-up 👩‍💻

- Welcome! We'll start the workshop shortly

- If you want to code along with me, please follow the set-up instructions ⬇️

### [statsrhian.github.io/build-r-pkg/set-up](https://statsrhian.github.io/build-r-pkg/set-up)

- If you'd prefer to just want to sit back and watch - that's fine too 😊

# Welcome

## What is an R package?

- A toolbox of useful functions

## Why build one?

- Reproducible
- Reusability across projects
- Testing is easier
- Dependency management
- Easy to use documentation
- It's fun and empowering
- Sharing is caring

## Myths

- Doesn’t have to be on CRAN
- Doesn’t have to have hundreds of functions
- Doesn’t have to be useful for anyone else
- Doesn’t have to do anything fancy
- Doesn’t have to be scary

:::{.notes}
- Small packages are fine!
- Build on the work of others
- Package warnings are okay!
:::

# Your personal toolbox

It’s not just any box of random tools — it’s a kit that someone else should be able to pick up and use immediately without calling you for instructions.

## What's in your toolbox?

:::::: {.columns}
::: {.column}
```{=html}
<pre>
biketools/
├─ DESCRIPTION
├─ NAMESPACE
├─ R/
│  ├─ chain-braker.R
│  ├─ multitool.R
│  ├─ pedal-wrench.R
│  ├─ tyre-levers.R
├─ man/
│  ├─ chain-braker.Rd
│  ├─ multitool.Rd
│  ├─ pedal-wrench.Rd
│  ├─ tyre-levers.Rd
├─ tests/
├─ vignettes/
</pre>
```
:::
::: {.column}
![](img/toolbox-closed.jpg){fig-alt="TODO: Add alt text."}
:::
::: 

:::{.notes}
It’s not just any box of random tools, it’s a kit that someone else should be able to pick up and use immediately without calling you for instructions.
:::


## `DESCRIPTION`

:::::: {.columns}
::: {.column}
```{=html}
<pre>
biketools/
├─ <span class="highlight">DESCRIPTION</span>
├─ NAMESPACE
├─ R/
│  ├─ chain-braker.R
│  ├─ multitool.R
│  ├─ pedal-wrench.R
│  ├─ tyre-levers.R
├─ man/
│  ├─ chain-braker.Rd
│  ├─ multitool.Rd
│  ├─ pedal-wrench.Rd
│  ├─ tyre-levers.Rd
├─ tests/
├─ vignettes/
</pre>
```
:::
::: {.column}
![](img/toolbox-label.jpg){fig-alt="TODO: Add alt text."}
:::
::: 

:::{.notes}

It lists the brand name (package name), who built it (author), what it’s for (description), model/version number, and what other kits it needs to work with (dependencies).

Without this, no one knows what kind of work the toolbox is meant for, is it for bikes, plumbing, or electronics?
:::

## `R/` folder

:::::: {.columns}
::: {.column}
```{=html}
<pre>
biketools/
├─ DESCRIPTION
├─ NAMESPACE
├─ <span class="highlight">R/
│  ├─ chain-braker.R
│  ├─ multitool.R
│  ├─ pedal-wrench.R
│  ├─ tyre-levers.R</span>
├─ man/
│  ├─ chain-braker.Rd
│  ├─ multitool.Rd
│  ├─ pedal-wrench.Rd
│  ├─ tyre-levers.Rd
├─ tests/
├─ vignettes/
</pre>
```
:::
::: {.column}
![](img/toolbox-tools.jpg){fig-alt="TODO: Add alt text."}
:::
::: 

:::{.notes}
This is where the actual tools (functions) live.

Each tool has a job, each function solves a specific problem.

The better organised and labelled they are, the faster someone can find what they need.
:::


## `man/` folder

:::::: {.columns}
::: {.column}
```{=html}
<pre>
biketools/
├─ DESCRIPTION
├─ NAMESPACE
├─ R/
│  ├─ chain-braker.R
│  ├─ multitool.R
│  ├─ pedal-wrench.R
│  ├─ tyre-levers.R
├─ <span class="highlight">man/
│  ├─ chain-braker.Rd
│  ├─ multitool.Rd
│  ├─ pedal-wrench.Rd
│  ├─ tyre-levers.Rd</span>
├─ tests/
├─ vignettes/
</pre>
```
:::
::: {.column}
![](img/toolbox-manual.jpg){fig-alt="TODO: Add alt text."}
:::
::: 

:::{.notes}
These tell you what the tool does, how to hold it, and give examples of using it safely.
:::


## `NAMESPACE`

:::::: {.columns}
::: {.column}
```{=html}
<pre>
biketools/
├─ DESCRIPTION
├─ <span class="highlight">NAMESPACE</span>
├─ R/
│  ├─ chain-braker.R
│  ├─ multitool.R
│  ├─ pedal-wrench.R
│  ├─ tyre-levers.R
├─ man/
│  ├─ chain-braker.Rd
│  ├─ multitool.Rd
│  ├─ pedal-wrench.Rd
│  ├─ tyre-levers.Rd
├─ tests/
├─ vignettes/
</pre>
```
:::
::: {.column}
![](img/toolbox-shelf.jpg){fig-alt="TODO: Add alt text."}
:::
::: 

:::{.notes}


- Some tools are kept in plain sight for anyone to grab (exported functions).

- Others are hidden in a secret compartment only you know about (internal functions).

- Sometimes your toolbox doesn’t have everything — you borrow tools from your friends’ toolboxes (imports).

:::

## Extra bits

::::: {.columns}
::: {.column}
- tests
- vignettes
- example data
- {pkgdown} website
- hex sticker

:::
::: {.column}
![](img/toolbox-closed.jpg){fig-alt="TODO: Add alt text."}
:::
::: 

:::{.notes}

- Do my tools work correctly?
- How to do a basic bike service
- Spare bit of chain for trying chain breaker
- Glossy website
- Cool paint job

:::

# Let's build 🛠️

## 👀 Create an R package

## 👩‍💻 Create an R package

- `usethis::create_package()`
- Open the `DESCRIPTION` file and customise it

## 👀 Add a function

## 👩‍💻 Add a function

- Create a new file in the `R/` folder

- Write any function

- Run `devtools::install()`

- Try out your function

```
hello <- function() {
print("My first function!")
}
```

## 👀 Document your function


## 👩‍💻 Document your function

1. Add roxygen strings

1. Run `devtools::document()`

1. Run `devtools::install()`

1. View the help file `?test`

## Developer process

1.  edit
1. `devtools::document()`
1. `devtools::build()`
1. `devtools::check()`

## Package check

Inspect your toolbox before lending it out!

- Is there anything in there that shouldn't be in there?
- Is it too heavy?
- Does it have all the right instructions?

:::{.notes}

An inspection before lending the box, ensures all tools are there and safe.

If something fails inspection, you get a report telling you exactly what to fix.

- Can someone carry the toolbox?
- Is there anything in there that shouldn't be in there?
- Is it too full?
- Does it have all the right instructions?

:::

## 👀 Package check

## 👩‍💻 Package check

- Run `devtools::check()`

- Don't worry if it doesn't all pass!

## 👩‍💻 Choose your own adventure

- Add a second function

- Create a vignette:

`usethis::use_vignette("intro")`

- Add a test:

```
usethis::use_testthat()
usethis::use_test("hello")
```


## Share your package

- CRAN: `install.packages("biketools.zip")`
- GitHub: `devtools::install_github("statsrhian/biketools.zip")`
- Local install: `devtools::install_local("biketools.zip")`


<!---

## Reflect...
- One thing I learned…
- One thing I want to try later…
- One thing I still have a question about…

--->





